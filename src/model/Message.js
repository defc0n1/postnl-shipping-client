/**
 * Postnl shipping client
 * A NodeJS API client for PostNL shipping services. Features include Generating barcdes, Generating labels in Base64
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.PostnlShippingClient) {
      root.PostnlShippingClient = {};
    }
    root.PostnlShippingClient.Message = factory(root.PostnlShippingClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Message model module.
   * @module model/Message
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Message</code>.
   * @alias module:model/Message
   * @class
   * @param messageID {String} ID of the message
   * @param messageTimeStamp {String} Date/time of sending the message. Format:  dd-mm-yyyy hh:mm:ss
   * @param printertype {String} Printer type that will be used to process the label, e.g. Zebra printer or PDF See Guidelines for the available printer types.
   */
  var exports = function(messageID, messageTimeStamp, printertype) {
    var _this = this;

    _this['MessageID'] = messageID;
    _this['MessageTimeStamp'] = messageTimeStamp;
    _this['Printertype'] = printertype;
  };

  /**
   * Constructs a <code>Message</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Message} obj Optional instance to populate.
   * @return {module:model/Message} The populated <code>Message</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('MessageID')) {
        obj['MessageID'] = ApiClient.convertToType(data['MessageID'], 'String');
      }
      if (data.hasOwnProperty('MessageTimeStamp')) {
        obj['MessageTimeStamp'] = ApiClient.convertToType(data['MessageTimeStamp'], 'String');
      }
      if (data.hasOwnProperty('Printertype')) {
        obj['Printertype'] = ApiClient.convertToType(data['Printertype'], 'String');
      }
    }
    return obj;
  }

  /**
   * ID of the message
   * @member {String} MessageID
   * @default '1'
   */
  exports.prototype['MessageID'] = '1';
  /**
   * Date/time of sending the message. Format:  dd-mm-yyyy hh:mm:ss
   * @member {String} MessageTimeStamp
   * @default '29-06-2016 12:00:00'
   */
  exports.prototype['MessageTimeStamp'] = '29-06-2016 12:00:00';
  /**
   * Printer type that will be used to process the label, e.g. Zebra printer or PDF See Guidelines for the available printer types.
   * @member {String} Printertype
   * @default 'GraphicFile|PDF'
   */
  exports.prototype['Printertype'] = 'GraphicFile|PDF';



  return exports;
}));


