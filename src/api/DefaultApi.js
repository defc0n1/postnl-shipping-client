/**
 * Postnl shipping client
 * A NodeJS API client for PostNL shipping services. Features include Generating barcdes, Generating labels in Base64
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Error', 'model/GenerateLabel', 'model/Response'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Error'), require('../model/GenerateLabel'), require('../model/Response'));
  } else {
    // Browser globals (root is window)
    if (!root.PostnlShippingClient) {
      root.PostnlShippingClient = {};
    }
    root.PostnlShippingClient.DefaultApi = factory(root.PostnlShippingClient.ApiClient, root.PostnlShippingClient.Error, root.PostnlShippingClient.GenerateLabel, root.PostnlShippingClient.Response);
  }
}(this, function(ApiClient, Error, GenerateLabel, Response) {
  'use strict';

  /**
   * Default service.
   * @module api/DefaultApi
   * @version 1.0.0
   */

  /**
   * Constructs a new DefaultApi. 
   * @alias module:api/DefaultApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the v11BarcodeGet operation.
     * @callback module:api/DefaultApi~v11BarcodeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate standard barcode
     * @param {String} apikey authenticate using your API key
     * @param {String} customerCode Customer code as known at PostNL Pakketten
     * @param {String} customerNumber Customer number as known at PostNL Pakketten
     * @param {String} type Accepted values are: 2S, 3S, CC, CP, CD, CF
     * @param {Object} opts Optional parameters
     * @param {String} opts.serie Barcode serie in the format &#39;###000000-###000000&#39;, for example 100000-20000. The range must consist of a minimal difference of 100.000. Minimum length of the serie is 6 characters; maximum length is 9 characters. It is allowed to add extra leading zeros at the beginning of the serie. See Guidelines for more information. (default to 000000000-999999999)
     * @param {module:api/DefaultApi~v11BarcodeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Response}
     */
    this.v11BarcodeGet = function(apikey, customerCode, customerNumber, type, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling v11BarcodeGet");
      }

      // verify the required parameter 'customerCode' is set
      if (customerCode === undefined || customerCode === null) {
        throw new Error("Missing the required parameter 'customerCode' when calling v11BarcodeGet");
      }

      // verify the required parameter 'customerNumber' is set
      if (customerNumber === undefined || customerNumber === null) {
        throw new Error("Missing the required parameter 'customerNumber' when calling v11BarcodeGet");
      }

      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling v11BarcodeGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'CustomerCode': customerCode,
        'CustomerNumber': customerNumber,
        'Type': type,
        'Serie': opts['serie']
      };
      var headerParams = {
        'apikey': apikey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Response;

      return this.apiClient.callApi(
        '/v1_1/barcode', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the v21LabelPost operation.
     * @callback module:api/DefaultApi~v21LabelPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate Base64 shipment label and confirm shipment
     * @param {String} apikey Authenticate using your API key
     * @param {module:model/GenerateLabel} body 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.confirm true or false; whether or not to confirm the shipments. Default value true. (default to true)
     * @param {module:api/DefaultApi~v21LabelPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Response}
     */
    this.v21LabelPost = function(apikey, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling v21LabelPost");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling v21LabelPost");
      }


      var pathParams = {
      };
      var queryParams = {
        'confirm': opts['confirm']
      };
      var headerParams = {
        'apikey': apikey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Response;

      return this.apiClient.callApi(
        '/v2_1/label', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
