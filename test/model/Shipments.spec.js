/**
 * Postnl shipping client
 * A NodeJS API client for PostNL shipping services. Features include Generating barcdes, Generating labels in Base64
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PostnlShippingClient);
  }
}(this, function(expect, PostnlShippingClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PostnlShippingClient.Shipments();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Shipments', function() {
    it('should create an instance of Shipments', function() {
      // uncomment below and update the code to test Shipments
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be.a(PostnlShippingClient.Shipments);
    });

    it('should have the property addresses (base name: "Addresses")', function() {
      // uncomment below and update the code to test the property addresses
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property amounts (base name: "Amounts")', function() {
      // uncomment below and update the code to test the property amounts
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property barcode (base name: "Barcode")', function() {
      // uncomment below and update the code to test the property barcode
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property collectionTimeStampStart (base name: "CollectionTimeStampStart")', function() {
      // uncomment below and update the code to test the property collectionTimeStampStart
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property collectionTimeStampEnd (base name: "CollectionTimeStampEnd")', function() {
      // uncomment below and update the code to test the property collectionTimeStampEnd
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property contacts (base name: "Contacts")', function() {
      // uncomment below and update the code to test the property contacts
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property content (base name: "Content")', function() {
      // uncomment below and update the code to test the property content
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property costCenter (base name: "CostCenter")', function() {
      // uncomment below and update the code to test the property costCenter
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property customerOrderNumber (base name: "CustomerOrderNumber")', function() {
      // uncomment below and update the code to test the property customerOrderNumber
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property customs (base name: "Customs")', function() {
      // uncomment below and update the code to test the property customs
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property deliveryAddress (base name: "DeliveryAddress")', function() {
      // uncomment below and update the code to test the property deliveryAddress
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property deliveryDate (base name: "DeliveryDate")', function() {
      // uncomment below and update the code to test the property deliveryDate
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property deliveryTimeStampStart (base name: "DeliveryTimeStampStart")', function() {
      // uncomment below and update the code to test the property deliveryTimeStampStart
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property deliveryTimeStampEnd (base name: "DeliveryTimeStampEnd")', function() {
      // uncomment below and update the code to test the property deliveryTimeStampEnd
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property dimension (base name: "Dimension")', function() {
      // uncomment below and update the code to test the property dimension
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property downPartnerBarcode (base name: "DownPartnerBarcode")', function() {
      // uncomment below and update the code to test the property downPartnerBarcode
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property downPartnerID (base name: "DownPartnerID")', function() {
      // uncomment below and update the code to test the property downPartnerID
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property downPartnerLocation (base name: "DownPartnerLocation")', function() {
      // uncomment below and update the code to test the property downPartnerLocation
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property groups (base name: "Groups")', function() {
      // uncomment below and update the code to test the property groups
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property iDType (base name: "IDType")', function() {
      // uncomment below and update the code to test the property iDType
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property iDNumber (base name: "IDNumber")', function() {
      // uncomment below and update the code to test the property iDNumber
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property iDExpiration (base name: "IDExpiration")', function() {
      // uncomment below and update the code to test the property iDExpiration
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property productCodeCollect (base name: "ProductCodeCollect")', function() {
      // uncomment below and update the code to test the property productCodeCollect
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property productCodeDelivery (base name: "ProductCodeDelivery")', function() {
      // uncomment below and update the code to test the property productCodeDelivery
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property productOptions (base name: "ProductOptions")', function() {
      // uncomment below and update the code to test the property productOptions
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property receiverDateOfBirth (base name: "ReceiverDateOfBirth")', function() {
      // uncomment below and update the code to test the property receiverDateOfBirth
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property reference (base name: "Reference")', function() {
      // uncomment below and update the code to test the property reference
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property referenceCollect (base name: "ReferenceCollect")', function() {
      // uncomment below and update the code to test the property referenceCollect
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property remark (base name: "Remark")', function() {
      // uncomment below and update the code to test the property remark
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property returnBarcode (base name: "ReturnBarcode")', function() {
      // uncomment below and update the code to test the property returnBarcode
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property returnReference (base name: "ReturnReference")', function() {
      // uncomment below and update the code to test the property returnReference
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

    it('should have the property timeslotID (base name: "TimeslotID")', function() {
      // uncomment below and update the code to test the property timeslotID
      //var instane = new PostnlShippingClient.Shipments();
      //expect(instance).to.be();
    });

  });

}));
